<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// General

global.p_sys = part_system_create();
global.surf = surface_create(room_width, room_height);
// REMEMBER TO DESTROY!

global.barrier_radius = room_width/2 - 100;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Item IDs &amp; Attributes

enum item {
    // Weapons
    pistol,
    revolver,
    smg
};

enum item_attr {
    type,
    enum_size
};

enum item_type {
    weapon,
    useable,  // drugs, bandages, etc.
    trap,  // includes mines, turrets, etc.
    craft
};
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Weapon Attributes

enum weapon {
    name = 1, // item_attr.enum_size,
    action,
    carry,
    damage,
    range,
    spread,
    ammo_capacity,
    ammo_type,
    sprite_frame_index,
    muzzle_offset  // pixel distance from sprite center to weapon muzzle
}

enum weapon_carry {
    one_handed,
    two_handed
}

enum weapon_action {
    semi_auto,
    automatic,
    single_shot
}

enum weapon_ammo_type {
    small_round,
    shell,
    missile
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Weapons

// Pistol
arr_pistol[item_attr.type] = item_type.weapon;
arr_pistol[weapon.name] = "Pathetic Pistol";
arr_pistol[weapon.action] = weapon_action.semi_auto;
arr_pistol[weapon.carry] = weapon_carry.one_handed;
arr_pistol[weapon.damage] = 6;
arr_pistol[weapon.range] = 500;
arr_pistol[weapon.spread] = 10;
arr_pistol[weapon.ammo_capacity] = 12;
arr_pistol[weapon.ammo_type] = weapon_ammo_type.small_round;
arr_pistol[weapon.sprite_frame_index] = 0;
arr_pistol[weapon.muzzle_offset] = 8;
global.items[item.pistol] = arr_pistol;
// Revolver
arr_revolver[item_attr.type] = item_type.weapon;
arr_revolver[weapon.name] = "Revolver";
arr_revolver[weapon.action] = weapon_action.semi_auto;
arr_revolver[weapon.carry] = weapon_carry.one_handed;
arr_revolver[weapon.damage] = 6;
arr_revolver[weapon.range] = 1000;
arr_revolver[weapon.spread] = 10;
arr_revolver[weapon.ammo_capacity] = 6;
arr_revolver[weapon.ammo_type] = weapon_ammo_type.small_round;
arr_revolver[weapon.sprite_frame_index] = 1;
arr_revolver[weapon.muzzle_offset] = 8;
global.items[item.revolver] = arr_revolver;
// SMG
arr_smg[item_attr.type] = item_type.weapon;
arr_smg[weapon.name] = "Submachine Gun";
arr_smg[weapon.action] = weapon_action.automatic;
arr_smg[weapon.carry] = weapon_carry.one_handed;
arr_smg[weapon.damage] = 6;
arr_smg[weapon.range] = 300;
arr_smg[weapon.spread] = 10;
arr_smg[weapon.ammo_capacity] = 12;
arr_smg[weapon.ammo_type] = weapon_ammo_type.small_round;
arr_smg[weapon.sprite_frame_index] = 2;
arr_smg[weapon.muzzle_offset] = 20;
global.items[item.smg] = arr_smg;
// LMG
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
